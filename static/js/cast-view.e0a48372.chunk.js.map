{"version":3,"sources":["views/Cast.js"],"names":["Cast","movieId","useState","cast","setCast","useEffect","fetchCredits","then","response","className","s","castList","map","actor","src","profile_path","alt","name","width","height","actorWrapper","actorName","actorCharacter","character","id"],"mappings":"2OAKe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,qBAAU,WACRC,YAAaL,GAASM,MAAK,SAACC,GAC1BJ,EAAQI,EAASL,WAElB,CAACF,IAGFE,GACE,oBAAIM,UAAWC,IAAEC,SAAjB,SACGR,EAAKS,KAAI,SAACC,GAAD,OACR,+BACE,qBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,QAET,sBAAKV,UAAWC,IAAEU,aAAlB,UACE,oBAAIX,UAAWC,IAAEW,UAAjB,SAA6BR,EAAMI,OACnC,oBAAGR,UAAWC,IAAEY,eAAhB,wBAA4CT,EAAMU,kBAT7CV,EAAMW","file":"static/js/cast-view.e0a48372.chunk.js","sourcesContent":["import { fetchCredits } from \"../services/ApiMovies\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Views.module.css\";\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCredits(movieId).then((response) => {\n      setCast(response.cast);\n    });\n  }, [movieId]);\n\n  return (\n    cast && (\n      <ul className={s.castList}>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n              alt={actor.name}\n              width=\"120\"\n              height=\"150\"\n            ></img>\n            <div className={s.actorWrapper}>\n              <h3 className={s.actorName}>{actor.name}</h3>\n              <p className={s.actorCharacter}>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}